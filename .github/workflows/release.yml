name: Build Windows Installer and Release

on:
  push:
    branches:
      - main # Sempre que houver um push na main

permissions:
  contents: write

jobs:
  build:
    name: Build Windows Installer
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23"

      - name: Build Windows Binary
        run: go build -o bin/gapizer.exe

      - name: Install Inno Setup
        run: choco install innosetup --yes

      - name: Build Windows Installer
        run: |
          "& 'C:\Program Files (x86)\Inno Setup 6\ISCC.exe' /Q gapizer_installer.iss"

      - name: Upload Installer as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: gapizer-installer
          path: Output\GAPIzer-Installer.exe # Caminho onde o instalador é gerado pelo Inno Setup

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Installer Artifact
        uses: actions/download-artifact@v4
        with:
          name: gapizer-installer

      - name: Get Current Date and Time
        id: datetime
        run: echo "::set-output name=datetime::$(date -u +'%Y-%m-%dT%H:%M:%SZ')"

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: "auto-generated-main" # Tag fixa para identificar as releases automáticas da main
          artifacts: Output/GAPIzer-Installer.exe
          release_name: "GAPIzer Installer - ${{ steps.datetime.outputs.datetime }}"
          body: |
            **Instalador gerado automaticamente com as últimas mudanças**
          prerelease: true
