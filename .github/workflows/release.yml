name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build binaries for all platforms
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23" # Especifica explicitamente a versão do Go

      - name: Build binaries
        run: |
          mkdir -p bin
          GOOS=windows GOARCH=amd64 go build -o bin/gapizer-windows.exe
          GOOS=linux GOARCH=amd64 go build -o bin/gapizer-linux
          GOOS=darwin GOARCH=amd64 go build -o bin/gapizer-mac

      - name: Upload binaries as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: bin/

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: binaries

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: main  # Usa a branch 'main' como base
          artifacts: bin/*
          body: |
            **Novos binários gerados automaticamente para esta versão:**
            - Windows: gapizer-windows.exe
            - Linux: gapizer-linux
            - macOS: gapizer-mac
          prerelease: true  # Marca como prerelease
